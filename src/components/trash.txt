  <Button title ='RUN' 
      onPress={() => {onPress}}
      color={"#7e80fd"} style={{flex: 1}}/>
        <Button title ='SKI' 
      onPress={() => console.log("button pressed2")}
      color={"#a6fd7e"} style={{flex: 2}}/>
        <Button title ='SWIM' 
      onPress={() => console.log("button pressed3")}
      color={"#faeebb"} style={{flex: 3}}/>

IF NOT GOING AS PLANNED HEHE
    <TouchableOpacity 
      onPress={onPress}
       style={{flex: 2, backgroundColor: '#e2e8fc'}}>
     <MaterialIcons name="downhill-skiing" size={24} color="black" />
     <Text>SKI</Text>
     </TouchableOpacity>


      <TouchableOpacity
      onPress={() => console.log("button pressed2")}
       style={{flex: 2, backgroundColor: '#e2e8fc'}}>
     <MaterialCommunityIcons name="run-fast" size={24} color="black" />
     <Text>RUN</Text>
     </TouchableOpacity>


      <TouchableOpacity
      onPress={() => console.log("button pressed3")}
       style={{flex: 2, backgroundColor: '#e2e8fc'}}>
     <FontAwesome6 name="person-swimming" size={24} color="black" />
     <Text>SWIM</Text>
     </TouchableOpacity>

     HOW TO BUILD MY FILE STRUCTURE
     src/
├── components/
│   ├── Button.js
│   ├── TextInput.js
│   └── index.js
├── features/
│   ├── Auth/
│   │   ├── LoginScreen.js
│   │   ├── RegisterScreen.js
│   │   └── authStyles.js
│   ├── Profile/
│   │   ├── ProfileScreen.js
│   │   └── profileStyles.js
│   └── Home/
│       ├── HomeScreen.js
│       └── homeStyles.js
├── navigation/
│   ├── AppNavigator.js
│   └── AuthNavigator.js
├── services/
│   ├── apiService.js
│   ├── authService.js
│   └── storageService.js
├── hooks/
│   ├── useAuth.js
│   └── useFetch.js
├── utils/
│   ├── helpers.js
│   ├── constants.js
│   └── validation.js
├── assets/
│   ├── images/
│   ├── fonts/
│   └── icons/
└── styles/
    ├── globalStyles.js
    ├── colors.js
    └── typography.js




    /---------------------OLD SETSKILL COPY-----------------------------/
    import { Button, StyleSheet, Text, TouchableHighlight, TouchableOpacity, View } from 'react-native';
import MaterialIcons from '@expo/vector-icons/MaterialIcons';
import FontAwesome6 from '@expo/vector-icons/FontAwesome6';
import MaterialCommunityIcons from '@expo/vector-icons/MaterialCommunityIcons';
import { useState } from 'react';
import { ICONS } from '../styles.js/icons';

export default function SetSkill() {

    /*const [count, setCount] = useState(0); 
    const onPress = () => setCount(prevCount => prevCount + 1);
    console.log({count})
    */

const [selectedButton, setSelectedButton] = useState(null);

  const handlePress = (buttonIndex) => {
    setSelectedButton(buttonIndex);
    console.log(`Button ${buttonIndex} is selected`);
  };

  return (
    <View style={[styles.container, { flexDirection: 'row' }]}>
      
      <TouchableOpacity 
        onPress={() => handlePress(1)}
        style={[
          styles.button,
          selectedButton === 1 && styles.selectedButton
        ]}
      >
        <MaterialIcons name="downhill-skiing" size={24} color="black" />
        <Text style={styles.buttonText}>SKI</Text>
      </TouchableOpacity>

      <TouchableOpacity
        onPress={() => handlePress(2)}
        style={[
          styles.button,
          selectedButton === 2 && styles.selectedButton
        ]}
      >
        <MaterialCommunityIcons name="run-fast" size={24} color="black" />
        <Text style={styles.buttonText}>RUN</Text>
      </TouchableOpacity>

      <TouchableOpacity
        onPress={() => handlePress(3)}
        style={[
          
          styles.button,
          selectedButton === 3 && styles.selectedButton
        ]}
      >
        <FontAwesome6 name="person-swimming" size={24} color="black" />
        <Text style={styles.buttonText}>SWIM</Text>
      </TouchableOpacity>
      
    </View>
  );
};

const styles = StyleSheet.create({
    container: {
      padding: 20,
      borderRadius: 7,
    },
    button: {
      flex: 2,
      backgroundColor: '#8f765f80',
      alignItems: 'center',
      padding: 10,
      borderWidth: 1,
      borderColor: '#352b23a6' 
    
    },
    selectedButton: {
      backgroundColor: '#584839a6', // Change this color as per your design
    },
    buttonText: {
      marginTop: 5,
      color: 'black',
    },
  });

  /--------------------SETSKILL COPY ENDS----------------------------/

////////////-----------------------DURATION START---------------------------/////////////////
    import { View, StyleSheet, TextInput } from "react-native";
import React from 'react';

export default function Duration({ duration, onChangeDuration }) {
  return (
    <View>
      
      <TextInput
        style={styles.input}
        onChangeText={onChangeDuration} // Update parent component's state with input
        value={duration} // Display the current duration value from parent
        placeholder="Duration"
        keyboardType="numeric"
      />
      
    </View>
  );
}

const styles = StyleSheet.create({
  input: {
    borderWidth: 1,
    padding: 10,
    marginBottom: 10,
    borderRadius: 5,
  },
});
///----------------------------END-------------------------/

       <TextInput
                placeholder="Duration (in hours)"
                keyboardType="numeric"
                value={duration}
                onChangeText={(text) => setDuration(text)}
                style={{ borderWidth: 1, marginBottom: 10, padding: 5 }}
            />

///----------------------------OLD USERFORM--------

import React, { useState } from 'react';
import { View, Text, TextInput, Button, FlatList, Alert } from 'react-native';

import DateTimePicker from '@react-native-community/datetimepicker'; // Ensure you import DateTimePicker
import ChooseDate from '../components/calendar';
import SetSkill from '../components/setSkill';

const UserForm = () => {
    const [userData, setUserData] = useState([]);
    const [selectedLogo, setSelectedLogo] = useState(null); // State for selected logo

    // State for new user input fields
    const [selectedDate, setSelectedDate] = useState(new Date());
    const [selectedTime, setSelectedTime] = useState(new Date());
    const [duration, setDuration] = useState('');

    // For showing TimePicker
    const [showTimePicker, setShowTimePicker] = useState(false);

    // Function to choose the logo
    const chooseLogo = (logo) => {
        setSelectedLogo(logo);
    };

    // Function to add new user
    const addUser = () => {
        if (selectedLogo && selectedDate && selectedTime && duration) {
            const newUser = {
                id: userData.length + 1, // Auto-increment the ID based on the array length
                logo: selectedLogo,
                date: selectedDate.toDateString(), // Convert to readable format
                time: selectedTime.toLocaleTimeString(), // Convert to readable time format
                duration: duration // Add duration
            };

            setUserData([...userData, newUser]);
            // Reset the inputs after adding the user
            setSelectedLogo(null);
            setSelectedDate(new Date());
            setSelectedTime(new Date());
            setDuration('');
        } else {
            Alert.alert('Error', 'Please fill out all fields, select a logo, date, time, and duration');
        }
    };

    return (
        <View style={{ flex: 1 }}>
            <Text style={{ fontSize: 24, marginBottom: 10 }}>Add New Training</Text>

            {/* Time Selection */}
            <Button title="Select starting time" onPress={() => setShowTimePicker(true)} />
            {showTimePicker && (
                <DateTimePicker
                    value={selectedTime}
                    mode="time"
                    display="default"
                    onChange={(event, selectedTime) => {
                        const currentTime = selectedTime || selectedTime;
                        setShowTimePicker(false);
                        setSelectedTime(currentTime);
                    }}
                />
            )}
            <Text style={{ marginBottom: 10 }}>Selected starting time: {selectedTime.toLocaleTimeString()}</Text>

            {/* Logo Selection */}
            <SetSkill setSelectedLogo={setSelectedLogo} />

            {/* Duration Input */}
            <TextInput
                placeholder="Duration (in hours)"
                keyboardType="numeric"
                value={duration}
                onChangeText={(text) => setDuration(text)}
                style={{ borderWidth: 1, marginBottom: 10, padding: 5 }}
            />


            {/* Date Selection using ChooseDate component */}
            <ChooseDate setSelectedDate={setSelectedDate} selectedDate={selectedDate} />

            {/* Add Training Button */}
            <Button title="Add new training" onPress={addUser} />

            {/* List of Trainings */}
            <Text style={{ fontSize: 20, marginVertical: 10 }}>Previous trainings</Text>
            <FlatList
                data={userData}
                keyExtractor={(item) => item.id.toString()}
                renderItem={({ item }) => (
                    <Text>{` Logo: ${item.logo}, Date: ${item.date}, Time: ${item.time}, Duration: ${item.duration} hours`}</Text>
                )}
            />
        </View>
    );
};

export default UserForm;


///-------------------------------USERFORM END---------------------------------------